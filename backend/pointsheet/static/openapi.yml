openapi: 3.1.0
info:
  title: Sim Racing Point Sheet API
  description: Sim Racing Point Sheet API
  version: 0.0.1
servers:
  - url: "http://localhost:5000"
    description: localhost
  - url: "http://api.pointsheet-app.com"
    description: local domain
paths:
  /series:
    get:
      description: Fetch all series
      operationId: fetchAllSeries
      tags:
        - Series
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum:
              - started
              - closed
      responses:
        200:
          description: List of series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ListSeries"
        401:
          description: Forbidden request
    post:
      description: Create series
      operationId: createSeries
      tags:
        - Series
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateSeriesRequest"
      responses:
        204:
          description: Created Series
        400:
          description: Bad request

  /series/{id}:
    get:
      description: Get series
      operationId: fetchSeriesById
      tags:
        - Series
      responses:
        200:
          description: Series
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Series"
        404:
          description: Not found
        401:
          description: Forbidden
    delete:
      description: Delete series
      operationId: deleteSeries
      tags:
        - Series
      responses:
        204:
          description: Delete series

  /series/{id}/events:
    get:
      description: Fetch events for series.
      operationId: fetchEventsForSeries
      tags:
        - Series
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of events for series
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        401:
          description: Forbidden
        404:
          description: Not found
    post:
      description: Create event for series
      operationId: createEventForSeries
      tags:
        - Series
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEvent"
      responses:
        204:
          description: Event created for series

  /events:
    get:
      operationId: getAllEvents
      description: Fetch all events not closed.
      tags:
        - Events
      responses:
        200:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Event"
        401:
          description: Forbidden

  /events/{id}:
    delete:
      description: Delete event
      operationId: deleteEventById
      tags:
        - Events
      responses:
        204:
          description: Item deleted
    get:
      description: Get event
      operationId: getEventById
      tags:
        - Events
      responses:
        200:
          description: Event
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Event"
components:
  schemas:
    Series:
      type: object
      required:
        - id
        - title
        - starts_at
        - ends_at
      properties:
        id:
          type: string
        title:
          type: string
        starts_at:
          type: datetime
        ends_at:
          type: datetime
        status:
          type: string
          enum:
            - started
            - closed
        events:
          type: array
          items:
            $ref: "#/components/schemas/Event"
    ListSeries:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        starts_at:
          type: datetime
        ends_at:
          type: datetime
        status:
          type: string
          enum:
            - open
            - closed
        event_count:
          type: string
          example: 0

    CreateSeriesRequest:
      type: object
      required:
        - title
        - status
      properties:
        title:
          type: string
        description:
          type: string
        status:
          $ref: "#/components/schemas/SeriesStatus"
          example: started
        starts_at:
          type: datetime
          example: 2025-01-01
        ends_at:
          type: datetime
          example: 2025-01-01

    SeriesStatus:
      type: string
      enum:
        - started
        - closed

    Event:
      description: An event may optionally belong to a series or be standalone in the case of one-off events.
      type: object
      required:
        - id
        - title
        - starts_at
        - ends_at
        - hosts
        - status
      properties:
        id:
          type: string
        title:
          type: string
        starts_at:
          type: datetime
        ends_at:
          type: datetime
        host:
          description: The person running the event.
          type: integer
        status:
          description: Default value is open. Users can register when this is open. No new signups when in progress or closed.
          type: string
          enum:
            - open
            - closed
            - in_progress
          default: open
        series:
          type: string
          description: UUID of series
        rules:
          type: string
          description: Can contain rules like number of pit stops, tire restrictions and others for this event.
        schedule:
          description: The sequence of activities making up the event. Qualification, Practice or race.
          type: array
          items:
            $ref: "#/components/schemas/Schedule"
    CreateEvent:
      type: object
      required:
        - title
        - starts_at
        - ends_at
        - host
        - status
      properties:
        title:
          type: string
        starts_at:
          type: datetime
        ends_at:
          type: datetime
        host:
          type: string
        status:
          type: string
          enum:
            - open
            - closed
            - in_progress
        series:
          type: string
        rules:
          type: string

    Schedule:
      type: object
      required:
        - id
        - type
        - nbr_of_laps
        - duration
      properties:
        id:
          type: int
        type:
          type: string
          enum:
            - Practice
            - Qualification
            - Race
        nbr_of_laps:
          type: integer
        duration:
          description: The duration of the schedule.
          type: string
          example: 01:45

    PointDistribution:
      description: Not used yet. TBD
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        points:
          type: object
          additionalProperties:
            type: integer
            example: { "1": 10, "2": 20 }
